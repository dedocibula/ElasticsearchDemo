#####################
#   LESSON No. 1    #    
#####################

# Welcome to Elasticsearch Demo

# We prepared this short practical demo so that you can
# learn how to interact with Elasticsearch
# You will start with basic operations and continue
# all the way to advanced queries

# So without further delay... begin your first lesson

# First, let us recapitulate the concepts. With Elasticsearch
# you use simple HTTP requests to perform operations
# So you can use our familiar GET, POST, PUT, DELETE
# requests. As arguments you specify the name of index
# (database), the name of type (table) and optional id

# Note. If you are using marvel javascript console you can
# benefit from usual code completions (TAB / CTRL + SPACE)

# 1
# Lets begin with the basics
# Create your first document
# Id will be generated for you (check the "_id" field in response)
POST /demo/<put your last name here>/
{
  "uco": "<your uco>",
  "name": "<your name>",
  "age": <your age>,
  "interests": ["nosql", "elasticsearch"]
}

# 2
# Now try to retrieve your document 
# Use the id from previous response
GET /demo/<put your last name here>/<id from previous response>

# 3
# Create another document
# This time specify its ID=1
POST /demo/<put your last name here>/1
{
  "uco": "<your uco>",
  "name": "<your name>",
  "age": <your age>,
  "interests": ["nosql", "elasticsearch"]
}

# Retrieve by id
GET  /demo/<put your last name here>/1

# 4
# Letâ€™s add address as nested document
PUT /demo/<put your last name here>/1
{
  "uco": "<your uco>",
  "name": "<your name>",
  "age": <your age>,
  "interests": ["nosql", "elasticsearch"],
  "address": {
      "city": "<your address>",
      "street": "<your address>",
      "number": <your address number>
  } 
}

# Check your updated document again
GET /demo/<put your last name here>/1

# 5
# Delete your document
DELETE /demo/<put your last name here>/1

# Check that the document was deleted
GET /demo/<put your last name here>/1

# Well done

# You have taken your first few steps towards mastering
# Elasticsearch. You can continue to play around in your
# sandbox or carry on with Lesson 2
